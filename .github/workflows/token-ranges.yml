name: Token Range Service

on:
  push:
    branches: [ "main" ]
    paths:
      - TokenRanges/**
  pull_request:
    branches: [ "main" ]
    paths:
      - TokenRanges/**
  workflow_dispatch: # manual trigger

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
      - name: dotnet publish
        run: dotnet publish TokenRanges/src/UrlShortener.TokenRangeService -c Release -o ${{env.DOTNET_ROOT}}/myapp
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp
      - name: Upload Sql artifact for db deployment
        uses: actions/upload-artifact@v4
        with:
          name: pg-script
          path: UrlShortener.TokenRangeService.Tests/Table.sql

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    environment: Development

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Download db artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: pg-script

      # Azure login for database access
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      # Deploy database schema using Azure CLI
      - name: Deploy Database Schema via Azure CLI
        run: |
          # Extract server name from the connection string
          SERVER_NAME=$(echo "${{ secrets.POSTGRES_HOST }}" | sed 's/.postgres.database.azure.com//')
          echo "Deploying schema to PostgreSQL server $SERVER_NAME"
          
          # Execute the SQL script using az postgres flexible-server execute
          az postgres flexible-server execute \
            --name $SERVER_NAME \
            --admin-user ${{ secrets.POSTGRES_USER }} \
            --admin-password "${{ secrets.PG_SQL_PASSWORD }}" \
            --database-name ranges \
            --file-path "Table.sql"

      # Deploy web app
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ vars.TOKEN_RANGES_RESOURCE_NAME }}
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZURE_TOKENRANGES_PUBLISH_PROFILE }}
          package: .

  # Commented staging and production deployments
